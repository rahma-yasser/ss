name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'  # Downgraded for compatibility

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
        heroku --version

    - name: Check or Create Heroku App
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: my-python-app-${{ github.run_id }}
      run: |
        if heroku apps:info --app $HEROKU_APP_NAME > /dev/null 2>&1; then
          echo "Heroku app $HEROKU_APP_NAME already exists."
        else
          echo "Creating Heroku app $HEROKU_APP_NAME..."
          heroku create $HEROKU_APP_NAME
          heroku buildpacks:set heroku/python -a $HEROKU_APP_NAME
        fi
        heroku git:remote -a $HEROKU_APP_NAME

    - name: Set Heroku Environment Variables
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: my-python-app-${{ github.run_id }}
      run: |
        # Example: Set environment variables (replace KEY=VALUE as needed)
        heroku config:set PYTHONPATH=/app -a $HEROKU_APP_NAME

    - name: Configure Git Credentials for Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git config --global credential.helper store
        echo "https://_:${HEROKU_API_KEY}@git.heroku.com" > ~/.git-credentials

    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: my-python-app-${{ github.run_id }}
      run: |
        git push heroku main
